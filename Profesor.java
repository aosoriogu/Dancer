package entidad;
// Generated 22/04/2018 07:09:53 PM by Hibernate Tools 5.2.8.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Profesor generated by hbm2java
 */
@Entity
@Table(name = "profesor", schema = "public")
public class Profesor implements java.io.Serializable {

	private int codProfesor;
	private Usuario usuario;
	private Integer experienciaProfesor;
	private Set<Reporte> reportes = new HashSet<Reporte>(0);
	private Set<Clase> clases = new HashSet<Clase>(0);

	public Profesor() {
	}

	public Profesor(int codProfesor) {
		this.codProfesor = codProfesor;
	}

	public Profesor(int codProfesor, Usuario usuario, Integer experienciaProfesor, Set<Reporte> reportes,
			Set<Clase> clases) {
		this.codProfesor = codProfesor;
		this.usuario = usuario;
		this.experienciaProfesor = experienciaProfesor;
		this.reportes = reportes;
		this.clases = clases;
	}

	@Id

	@Column(name = "cod_profesor", unique = true, nullable = false)
	public int getCodProfesor() {
		return this.codProfesor;
	}

	public void setCodProfesor(int codProfesor) {
		this.codProfesor = codProfesor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_usuario")
	public Usuario getUsuario() {
		return this.usuario;
	}

	public void setUsuario(Usuario usuario) {
		this.usuario = usuario;
	}

	@Column(name = "experiencia_profesor")
	public Integer getExperienciaProfesor() {
		return this.experienciaProfesor;
	}

	public void setExperienciaProfesor(Integer experienciaProfesor) {
		this.experienciaProfesor = experienciaProfesor;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "profesor")
	public Set<Reporte> getReportes() {
		return this.reportes;
	}

	public void setReportes(Set<Reporte> reportes) {
		this.reportes = reportes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "profesor")
	public Set<Clase> getClases() {
		return this.clases;
	}

	public void setClases(Set<Clase> clases) {
		this.clases = clases;
	}

}
